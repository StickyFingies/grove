import{w as e,a as i,f as h,Q as d,p as w,u as y,P as g,g as _,M as u,V as n}from"./game.aa77d7bc.js";import{G as b}from"./script.a5177127.js";const f={path:"./models/sponza.glb",rigidbody_whitelist:["mesh_5","mesh_6","mesh_8","mesh_9","mesh_10","mesh_19","mesh_19","mesh_21","mesh_22","mesh_24"]},M={path:"./models/skjar-isles-glb/skjarisles.glb"},j={path:"./models/arena/arena.glb"},A={path:"./models/new-map/new-map-physics.glb",physicsPath:"./models/new-map/new-map-physics.glb"};var P={sponza:f,skjarIsles:M,testArena:j,newMap:A};class Q extends b{async initialize(){const m=P.testArena,p=e.createEntity(),a=await i.loadModel({uri:m.path});a.name="Map",a.traverse(s=>{if(s instanceof h){const t=new n,o=new n,r=new d;s.getWorldPosition(t),s.getWorldScale(o),s.getWorldQuaternion(r);const l=w.createTrimesh({mass:0,isGhost:!1,shouldRotate:!0},{pos:t.toArray(),scale:o.toArray(),quat:r.toArray()},y(s.geometry)),c=e.createEntity();e.put(c,[g],[l])}}),_.addObjectToScene(a),e.put(p,[u],[a])}}export{Q as default};
