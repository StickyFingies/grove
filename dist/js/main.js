/*!
 * 
 * Made with <3 by the Grove team | Mon Aug 09 2021 13:21:12 GMT-0500 (Central Daylight Time)
 *
 */
/*
 * ATTENTION: The "eval" devtool has been used (maybe by default in mode: "development").
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(self["webpackChunkthe_grove"] = self["webpackChunkthe_grove"] || []).push([["main"],{

/***/ "./node_modules/css-loader/dist/cjs.js?url=false!./src/css/play.css":
/*!**************************************************************************!*\
  !*** ./node_modules/css-loader/dist/cjs.js?url=false!./src/css/play.css ***!
  \**************************************************************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var _node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../node_modules/css-loader/dist/runtime/api.js */ \"./node_modules/css-loader/dist/runtime/api.js\");\n/* harmony import */ var _node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_0__);\n// Imports\n\nvar ___CSS_LOADER_EXPORT___ = _node_modules_css_loader_dist_runtime_api_js__WEBPACK_IMPORTED_MODULE_0___default()(function(i){return i[1]});\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \"/* @import 'https://fonts.googleapis.com/css?family=Megrim'; */\\r\\n\\r\\n:root {\\r\\n    --font-stack: Megrim, sans-serif;\\r\\n}\\r\\n\\r\\nhtml, body {\\r\\n    overflow: hidden;\\r\\n    user-select: none;\\r\\n    margin: 0;\\r\\n    width: 100%;\\r\\n    height: 100%;\\r\\n}\\r\\n\\r\\n.hotbar {\\r\\n    border: 1px solid #eee;\\r\\n    margin-left: 4px;\\r\\n    margin-right: 4px;\\r\\n    text-align: center;\\r\\n    line-height: 50px;\\r\\n    font-size: 14px;\\r\\n    color: white;\\r\\n    padding: 0;\\r\\n}\\r\\n\\r\\n.hotbar.active {\\r\\n    background: tomato;\\r\\n}\\r\\n\\r\\n#blocker {\\r\\n    position: absolute;\\r\\n    width: 100%;\\r\\n    height: 100%;\\r\\n    font: 100% var(--font-stack);\\r\\n    color: #fff;\\r\\n    background-color: rgba(0, 0, 0, 1.0);\\r\\n    z-index: 5;\\r\\n}\\r\\n\\r\\n#underlay {\\r\\n    position: absolute;\\r\\n    width: 100%;\\r\\n    height: 100%;\\r\\n    background-color: rgba(0, 0, 0, 0.8);\\r\\n    z-index: 1;\\r\\n}\\r\\n\\r\\n#load {\\r\\n    width: 50%;\\r\\n    height: 50%;\\r\\n    text-align: center;\\r\\n}\\r\\n\\r\\n#load>* {\\r\\n    margin: 0;\\r\\n    position: absolute;\\r\\n    top: 50%;\\r\\n    left: 50%;\\r\\n    transform: translate(-50%, -50%);\\r\\n}\\r\\n\\r\\n#hud {\\r\\n    position: fixed;\\r\\n    left: 5%;\\r\\n    bottom: 0px;\\r\\n    width: 90%;\\r\\n}\\r\\n\\r\\n#quest-alert {\\r\\n    position: fixed;\\r\\n    right: 0;\\r\\n    top: 20%;\\r\\n    width: 280px;\\r\\n    height: 90px;\\r\\n    padding-left: 30px;\\r\\n    padding-top: 20px;\\r\\n    background-image: url(/img/QuestBar.png);\\r\\n    color: white;\\r\\n}\\r\\n\\r\\n#quest-alert>p {\\r\\n    margin-bottom: -4px;\\r\\n}\\r\\n\\r\\n#pause {\\r\\n    position: fixed;\\r\\n    width: 60%;\\r\\n    left: 20%;\\r\\n    top: 15%;\\r\\n    font-family: var(--font-stack);\\r\\n}\\r\\n\\r\\n#gui {\\r\\n    z-index: 4;\\r\\n    position: fixed;\\r\\n    width: 70%;\\r\\n    height: 70%;\\r\\n    left: 15%;\\r\\n    top: 15%;\\r\\n    background-image: url(/img/gui.png);\\r\\n    background-size: cover;\\r\\n    padding-left: 5%;\\r\\n    padding-top: 3%;\\r\\n}\\r\\n\\r\\n#gui-content {\\r\\n    height: 100%;\\r\\n}\\r\\n\\r\\n#gui-exit {\\r\\n    position: fixed;\\r\\n    bottom: 22%;\\r\\n    right: 20%;\\r\\n}\\r\\n\\r\\n#crosshair {\\r\\n    position: fixed;\\r\\n    left: 50%;\\r\\n    top: 50%;\\r\\n}\", \"\"]);\n// Exports\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (___CSS_LOADER_EXPORT___);\n\n\n//# sourceURL=webpack://the-grove/./src/css/play.css?./node_modules/css-loader/dist/cjs.js?url=false");

/***/ }),

/***/ "./src/css/play.css":
/*!**************************!*\
  !*** ./src/css/play.css ***!
  \**************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var _node_modules_style_loader_dist_runtime_injectStylesIntoStyleTag_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! !../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js */ \"./node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\");\n/* harmony import */ var _node_modules_style_loader_dist_runtime_injectStylesIntoStyleTag_js__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_node_modules_style_loader_dist_runtime_injectStylesIntoStyleTag_js__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _node_modules_css_loader_dist_cjs_js_url_false_play_css__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! !!../../node_modules/css-loader/dist/cjs.js?url=false!./play.css */ \"./node_modules/css-loader/dist/cjs.js?url=false!./src/css/play.css\");\n\n            \n\nvar options = {};\n\noptions.insert = \"head\";\noptions.singleton = false;\n\nvar update = _node_modules_style_loader_dist_runtime_injectStylesIntoStyleTag_js__WEBPACK_IMPORTED_MODULE_0___default()(_node_modules_css_loader_dist_cjs_js_url_false_play_css__WEBPACK_IMPORTED_MODULE_1__.default, options);\n\n\n\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (_node_modules_css_loader_dist_cjs_js_url_false_play_css__WEBPACK_IMPORTED_MODULE_1__.default.locals || {});\n\n//# sourceURL=webpack://the-grove/./src/css/play.css?");

/***/ }),

/***/ "./src/js/ecs/entity-manager.ts":
/*!**************************************!*\
  !*** ./src/js/ecs/entity-manager.ts ***!
  \**************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ EntityManager)\n/* harmony export */ });\n/* harmony import */ var events__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! events */ \"./node_modules/events/events.js\");\n/* harmony import */ var events__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(events__WEBPACK_IMPORTED_MODULE_0__);\nvar __classPrivateFieldGet = (undefined && undefined.__classPrivateFieldGet) || function (receiver, state, kind, f) {\r\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a getter\");\r\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot read private member from an object whose class did not declare it\");\r\n    return kind === \"m\" ? f : kind === \"a\" ? f.call(receiver) : f ? f.value : state.get(receiver);\r\n};\r\nvar __classPrivateFieldSet = (undefined && undefined.__classPrivateFieldSet) || function (receiver, state, value, kind, f) {\r\n    if (kind === \"m\") throw new TypeError(\"Private method is not writable\");\r\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a setter\");\r\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot write private member to an object whose class did not declare it\");\r\n    return (kind === \"a\" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value)), value;\r\n};\r\nvar _EntityManager_events, _EntityManager_tagList, _EntityManager_dataManagers, _EntityManager_entityId, _EntityManager_idToArchetype, _EntityManager_archetypes;\r\n\r\nconst areSetsEqual = (setA, setB) => {\r\n    let equal = setA.size === setB.size;\r\n    for (const value of setA) {\r\n        if (!setB.has(value)) {\r\n            equal = false;\r\n            break;\r\n        }\r\n    }\r\n    return equal;\r\n};\r\n/**\r\n * Component storage.  Thin wrapper over a `Map`\r\n */\r\nclass DataManager {\r\n    constructor() {\r\n        this.components = new Map();\r\n    }\r\n    setComponent(entity, data) {\r\n        this.components.set(entity, data);\r\n    }\r\n    getComponent(entity) {\r\n        return this.components.get(entity);\r\n    }\r\n    hasComponent(entity) {\r\n        return this.components.has(entity);\r\n    }\r\n    deleteComponent(entity) {\r\n        return this.components.delete(entity);\r\n    }\r\n}\r\n// TODO document this class\r\nclass Archetype {\r\n    constructor(signature, entities) {\r\n        this.signature = signature;\r\n        this.entities = entities;\r\n    }\r\n    /** Check if this archetype contains at LEAST all the component types listed in `query` */\r\n    containsSignature(query) {\r\n        let matches = true;\r\n        for (const type of query) {\r\n            if (!this.signature.has(type)) {\r\n                matches = false;\r\n                break;\r\n            }\r\n        }\r\n        return matches;\r\n    }\r\n}\r\n/**\r\n * TODO add events for updating a component.\r\n * I think this could be implemented by making `getComponent()` return a copy of the internal data,\r\n * and then using `setComponent` to override the internal state with the new state - very functional\r\n * approach.\r\n */\r\nclass EntityManager {\r\n    constructor() {\r\n        /**\r\n         * Event bus for signalling when components are set / deleted\r\n         * @eventProperty\r\n         */\r\n        _EntityManager_events.set(this, new (events__WEBPACK_IMPORTED_MODULE_0___default())());\r\n        /** Map from tags to entities */\r\n        _EntityManager_tagList.set(this, new Map());\r\n        /** Map between component type and component storage */\r\n        _EntityManager_dataManagers.set(this, new Map());\r\n        /** Next available entity ID */\r\n        _EntityManager_entityId.set(this, 0);\r\n        /** Map between entity ID and its corresponding archetype */\r\n        _EntityManager_idToArchetype.set(this, new Map());\r\n        /**\r\n         * List of entity archetypes\r\n         * TODO document archetypes\r\n         */\r\n        _EntityManager_archetypes.set(this, []);\r\n    }\r\n    get events() {\r\n        return __classPrivateFieldGet(this, _EntityManager_events, \"f\");\r\n    }\r\n    /** Allocate an ID for a new entity */\r\n    createEntity() {\r\n        const id = __classPrivateFieldGet(this, _EntityManager_entityId, \"f\");\r\n        __classPrivateFieldSet(this, _EntityManager_entityId, __classPrivateFieldGet(this, _EntityManager_entityId, \"f\") + 1, \"f\");\r\n        return id;\r\n    }\r\n    /** Delete an entity and all its component data */\r\n    deleteEntity(id) {\r\n        const archetype = __classPrivateFieldGet(this, _EntityManager_idToArchetype, \"f\").get(id);\r\n        // emit 'delete' events for every component in this entity\r\n        for (const type of archetype.signature) {\r\n            this.events.emit(`delete${type.name}Component`, id, this.getComponent(id, type));\r\n            __classPrivateFieldGet(this, _EntityManager_dataManagers, \"f\").get(type)?.deleteComponent(id);\r\n        }\r\n        archetype.entities.delete(id);\r\n        __classPrivateFieldGet(this, _EntityManager_idToArchetype, \"f\").delete(id);\r\n    }\r\n    /** Set a component for an entity */\r\n    setComponent(id, type, data) {\r\n        // assign to new entity archetype\r\n        const signature = new Set(__classPrivateFieldGet(this, _EntityManager_idToArchetype, \"f\").get(id)?.signature);\r\n        signature.add(type);\r\n        this.refreshArchetype(id, signature);\r\n        // lazily initialize data manager\r\n        if (!__classPrivateFieldGet(this, _EntityManager_dataManagers, \"f\").has(type)) {\r\n            __classPrivateFieldGet(this, _EntityManager_dataManagers, \"f\").set(type, new DataManager());\r\n        }\r\n        // set the component (BEFORE event)\r\n        __classPrivateFieldGet(this, _EntityManager_dataManagers, \"f\").get(type)?.setComponent(id, data);\r\n        // emit a `set` event\r\n        this.events.emit(`set${type.name}Component`, id, data);\r\n    }\r\n    /** Delete a component for an entity */\r\n    deleteComponent(id, type) {\r\n        // assign to new entity archetype\r\n        const signature = new Set(__classPrivateFieldGet(this, _EntityManager_idToArchetype, \"f\").get(id)?.signature);\r\n        signature.delete(type);\r\n        this.refreshArchetype(id, signature);\r\n        // lazily initialize data manager\r\n        if (!__classPrivateFieldGet(this, _EntityManager_dataManagers, \"f\").has(type)) {\r\n            console.warn(`component type ${type.name} is not registered`);\r\n            __classPrivateFieldGet(this, _EntityManager_dataManagers, \"f\").set(type, new DataManager());\r\n        }\r\n        // emit a `delete` event\r\n        this.events.emit(`delete${type.name}Component`, id, this.getComponent(id, type));\r\n        // delete the component (AFTER event)\r\n        __classPrivateFieldGet(this, _EntityManager_dataManagers, \"f\").get(type)?.deleteComponent(id);\r\n    }\r\n    /** Get a component from an entity */\r\n    getComponent(id, type) {\r\n        // lazily initialize data manager\r\n        if (!__classPrivateFieldGet(this, _EntityManager_dataManagers, \"f\").has(type)) {\r\n            throw new Error(`component type ${type.name} is not registered`);\r\n        }\r\n        return __classPrivateFieldGet(this, _EntityManager_dataManagers, \"f\").get(type)?.getComponent(id);\r\n    }\r\n    /** Check if an entity has a component */\r\n    hasComponent(id, type) {\r\n        // lazily initialize data manager\r\n        if (!__classPrivateFieldGet(this, _EntityManager_dataManagers, \"f\").has(type)) {\r\n            console.warn(`component type ${type.name} is not registered`);\r\n            __classPrivateFieldGet(this, _EntityManager_dataManagers, \"f\").set(type, new DataManager());\r\n        }\r\n        return __classPrivateFieldGet(this, _EntityManager_dataManagers, \"f\").get(type)?.hasComponent(id);\r\n    }\r\n    /** Add a tag to an entity.  Entities can later be retrieved using the same tag */\r\n    addTag(id, tag) {\r\n        __classPrivateFieldGet(this, _EntityManager_tagList, \"f\").set(tag, id);\r\n    }\r\n    /** Get a specific entity by its tag */\r\n    getTag(tag) {\r\n        if (!__classPrivateFieldGet(this, _EntityManager_tagList, \"f\").has(tag)) {\r\n            throw new Error(`no entity found with tag:${tag.description}`);\r\n        }\r\n        return __classPrivateFieldGet(this, _EntityManager_tagList, \"f\").get(tag);\r\n    }\r\n    /** Get a list of all entity id's which match a component signature */\r\n    submitQuery(query) {\r\n        const entities = [];\r\n        // add entity ID's from archetypes that match signature\r\n        for (const [id, arch] of __classPrivateFieldGet(this, _EntityManager_idToArchetype, \"f\")) {\r\n            if (arch.containsSignature(query))\r\n                entities.push(id);\r\n        }\r\n        return entities;\r\n    }\r\n    // TODO document this\r\n    refreshArchetype(id, signature) {\r\n        // component signature changed; remove affiliations with any old archetypes\r\n        __classPrivateFieldGet(this, _EntityManager_idToArchetype, \"f\").get(id)?.entities.delete(id);\r\n        __classPrivateFieldGet(this, _EntityManager_idToArchetype, \"f\").delete(id);\r\n        let entityInArchetype = false;\r\n        // we should attempt to add this entity to an existing archetype\r\n        // it's more than likely that one already exists\r\n        for (const arch of __classPrivateFieldGet(this, _EntityManager_archetypes, \"f\")) {\r\n            if (areSetsEqual(arch.signature, signature)) {\r\n                entityInArchetype = true;\r\n                __classPrivateFieldGet(this, _EntityManager_idToArchetype, \"f\").set(id, arch);\r\n                arch.entities.add(id);\r\n            }\r\n        }\r\n        // if we couldn't find an archetype that matches this entity's list of components,\r\n        // create one that contains this entity\r\n        if (!entityInArchetype) {\r\n            const arch = new Archetype(new Set(signature), new Set([id]));\r\n            __classPrivateFieldGet(this, _EntityManager_archetypes, \"f\").push(arch);\r\n            __classPrivateFieldGet(this, _EntityManager_idToArchetype, \"f\").set(id, arch);\r\n        }\r\n    }\r\n}\r\n_EntityManager_events = new WeakMap(), _EntityManager_tagList = new WeakMap(), _EntityManager_dataManagers = new WeakMap(), _EntityManager_entityId = new WeakMap(), _EntityManager_idToArchetype = new WeakMap(), _EntityManager_archetypes = new WeakMap();\r\n\n\n//# sourceURL=webpack://the-grove/./src/js/ecs/entity-manager.ts?");

/***/ }),

/***/ "./src/js/ecs/entity.ts":
/*!******************************!*\
  !*** ./src/js/ecs/entity.ts ***!
  \******************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ Entity)\n/* harmony export */ });\n/* harmony import */ var auto_bind__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! auto-bind */ \"./node_modules/auto-bind/index.js\");\n/* harmony import */ var auto_bind__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(auto_bind__WEBPACK_IMPORTED_MODULE_0__);\nvar __classPrivateFieldSet = (undefined && undefined.__classPrivateFieldSet) || function (receiver, state, value, kind, f) {\r\n    if (kind === \"m\") throw new TypeError(\"Private method is not writable\");\r\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a setter\");\r\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot write private member to an object whose class did not declare it\");\r\n    return (kind === \"a\" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value)), value;\r\n};\r\nvar __classPrivateFieldGet = (undefined && undefined.__classPrivateFieldGet) || function (receiver, state, kind, f) {\r\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a getter\");\r\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot read private member from an object whose class did not declare it\");\r\n    return kind === \"m\" ? f : kind === \"a\" ? f.call(receiver) : f ? f.value : state.get(receiver);\r\n};\r\nvar _Entity_manager, _Entity_id;\r\n\r\n/**\r\n * Object-oriented wrapper around an `EntityManager` entity id\r\n * @see `EntityManager` for all method documentation.\r\n */\r\nclass Entity {\r\n    constructor(manager = Entity.defaultManager, id = manager.createEntity()) {\r\n        /** The `EntityManager` this entity belongs to */\r\n        _Entity_manager.set(this, void 0);\r\n        /** ID of the entity being wrapped */\r\n        _Entity_id.set(this, void 0);\r\n        auto_bind__WEBPACK_IMPORTED_MODULE_0___default()(this);\r\n        __classPrivateFieldSet(this, _Entity_manager, manager, \"f\");\r\n        __classPrivateFieldSet(this, _Entity_id, id, \"f\");\r\n    }\r\n    get id() { return __classPrivateFieldGet(this, _Entity_id, \"f\"); }\r\n    get manager() { return __classPrivateFieldGet(this, _Entity_manager, \"f\"); }\r\n    delete() {\r\n        this.manager.deleteEntity(this.id);\r\n    }\r\n    setComponent(type, data) {\r\n        this.manager.setComponent(this.id, type, data);\r\n        return this;\r\n    }\r\n    deleteComponent(type) {\r\n        this.manager.deleteComponent(this.id, type);\r\n        return this;\r\n    }\r\n    getComponent(type) {\r\n        return this.manager.getComponent(this.id, type);\r\n    }\r\n    hasComponent(type) {\r\n        return this.manager.hasComponent(this.id, type);\r\n    }\r\n    addTag(tag) {\r\n        this.manager.addTag(this.id, tag);\r\n        return this;\r\n    }\r\n    static getTag(tag, manager = Entity.defaultManager) {\r\n        const id = manager.getTag(tag);\r\n        return new Entity(manager, id);\r\n    }\r\n}\r\n_Entity_manager = new WeakMap(), _Entity_id = new WeakMap();\r\n\n\n//# sourceURL=webpack://the-grove/./src/js/ecs/entity.ts?");

/***/ }),

/***/ "./src/js/engine.ts":
/*!**************************!*\
  !*** ./src/js/engine.ts ***!
  \**************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ Engine)\n/* harmony export */ });\n/* harmony import */ var three__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! three */ \"./node_modules/three/build/three.module.js\");\n/* harmony import */ var stats_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! stats-js */ \"./node_modules/stats-js/build/stats.min.js\");\n/* harmony import */ var stats_js__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(stats_js__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var dat_gui__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! dat.gui */ \"./node_modules/dat.gui/build/dat.gui.module.js\");\n/* harmony import */ var auto_bind__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! auto-bind */ \"./node_modules/auto-bind/index.js\");\n/* harmony import */ var auto_bind__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(auto_bind__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var _load__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./load */ \"./src/js/load.ts\");\n/* harmony import */ var _graphics_graphics__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./graphics/graphics */ \"./src/js/graphics/graphics.ts\");\n/* harmony import */ var _physics__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./physics */ \"./src/js/physics.ts\");\n/* harmony import */ var _ecs_entity__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./ecs/entity */ \"./src/js/ecs/entity.ts\");\n/* harmony import */ var _ecs_entity_manager__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./ecs/entity-manager */ \"./src/js/ecs/entity-manager.ts\");\n/* harmony import */ var _json_maps_json__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./json/maps.json */ \"./src/js/json/maps.json\");\n/* harmony import */ var _game_scripts_json__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./game/_scripts.json */ \"./src/js/game/_scripts.json\");\nvar __classPrivateFieldGet = (undefined && undefined.__classPrivateFieldGet) || function (receiver, state, kind, f) {\r\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a getter\");\r\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot read private member from an object whose class did not declare it\");\r\n    return kind === \"m\" ? f : kind === \"a\" ? f.call(receiver) : f ? f.value : state.get(receiver);\r\n};\r\nvar __classPrivateFieldSet = (undefined && undefined.__classPrivateFieldSet) || function (receiver, state, value, kind, f) {\r\n    if (kind === \"m\") throw new TypeError(\"Private method is not writable\");\r\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a setter\");\r\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot write private member to an object whose class did not declare it\");\r\n    return (kind === \"a\" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value)), value;\r\n};\r\nvar _Engine_lastFrameTime, _Engine_gameScripts, _Engine_stats, _Engine_gui, _Engine_graphics, _Engine_physics, _Engine_assetLoader, _Engine_ecs;\r\n\r\n// @ts-ignore\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nclass Engine {\r\n    constructor() {\r\n        this.running = false;\r\n        _Engine_lastFrameTime.set(this, 0);\r\n        _Engine_gameScripts.set(this, []);\r\n        _Engine_stats.set(this, new (stats_js__WEBPACK_IMPORTED_MODULE_0___default())());\r\n        _Engine_gui.set(this, new dat_gui__WEBPACK_IMPORTED_MODULE_1__.GUI());\r\n        _Engine_graphics.set(this, new _graphics_graphics__WEBPACK_IMPORTED_MODULE_3__.Graphics());\r\n        _Engine_physics.set(this, new _physics__WEBPACK_IMPORTED_MODULE_4__.Physics());\r\n        _Engine_assetLoader.set(this, new _load__WEBPACK_IMPORTED_MODULE_5__.default());\r\n        _Engine_ecs.set(this, new _ecs_entity_manager__WEBPACK_IMPORTED_MODULE_6__.default());\r\n        auto_bind__WEBPACK_IMPORTED_MODULE_2___default()(this);\r\n    }\r\n    /** Convenience method */\r\n    get gui() {\r\n        return __classPrivateFieldGet(this, _Engine_gui, \"f\");\r\n    }\r\n    /** Convenience method */\r\n    get graphics() {\r\n        return __classPrivateFieldGet(this, _Engine_graphics, \"f\");\r\n    }\r\n    /** Convenience method */\r\n    get physics() {\r\n        return __classPrivateFieldGet(this, _Engine_physics, \"f\");\r\n    }\r\n    /** Convenience method */\r\n    get assetLoader() {\r\n        return __classPrivateFieldGet(this, _Engine_assetLoader, \"f\");\r\n    }\r\n    /** Convenience method */\r\n    get ecs() {\r\n        return __classPrivateFieldGet(this, _Engine_ecs, \"f\");\r\n    }\r\n    async init() {\r\n        _ecs_entity__WEBPACK_IMPORTED_MODULE_7__.default.defaultManager = this.ecs;\r\n        three__WEBPACK_IMPORTED_MODULE_8__.Cache.enabled = true;\r\n        // initialize engine systems\r\n        this.graphics.init(this);\r\n        this.physics.init(this);\r\n        // TODO move `onProgress` into AssetLoader, and UI into a game script\r\n        // show asset loading progress\r\n        three__WEBPACK_IMPORTED_MODULE_8__.DefaultLoadingManager.onProgress = (url, loaded, total) => {\r\n            console.log(`${url} (${loaded}/${total})`);\r\n            if (loaded === total) {\r\n                document.querySelector('#spinner')?.setAttribute('style', 'display:none');\r\n                document.querySelector('#load-play-btn')?.setAttribute('style', 'display:block');\r\n            }\r\n        };\r\n        // dynamically load game scripts\r\n        const scriptModules = [];\r\n        for (const scriptName of _game_scripts_json__WEBPACK_IMPORTED_MODULE_9__.scripts) {\r\n            scriptModules.push(__webpack_require__(\"./src/js/game lazy recursive ^\\\\.\\\\/.*$\")(`./${scriptName}`));\r\n        }\r\n        // init game scripts\r\n        for (const scriptModule of await Promise.all(scriptModules)) {\r\n            // eslint-disable-next-line new-cap\r\n            const script = new scriptModule.default(this);\r\n            __classPrivateFieldGet(this, _Engine_gameScripts, \"f\").push(script);\r\n            script.init();\r\n        }\r\n        // load the map\r\n        const map = _json_maps_json__WEBPACK_IMPORTED_MODULE_10__[\"test-arena\"];\r\n        for (const path of map.objects) {\r\n            // we can't use `loadAsync` here because the map model may contain multiple meshes\r\n            this.assetLoader.loadModel(path, (mesh) => {\r\n                const body = _load__WEBPACK_IMPORTED_MODULE_5__.default.loadPhysicsModel(mesh, 0);\r\n                mesh.receiveShadow = true;\r\n                new _ecs_entity__WEBPACK_IMPORTED_MODULE_7__.default()\r\n                    .setComponent(_graphics_graphics__WEBPACK_IMPORTED_MODULE_3__.GraphicsData, mesh)\r\n                    .setComponent(_physics__WEBPACK_IMPORTED_MODULE_4__.PhysicsData, body);\r\n            });\r\n        }\r\n        // between the game scripts and the map, we probably just created a bunch of renderables.\r\n        // start that backend work now so it isn't being done when the first frame starts rendering.\r\n        this.graphics.update();\r\n        // show performance statistics\r\n        __classPrivateFieldGet(this, _Engine_stats, \"f\").showPanel(1);\r\n        document.body.appendChild(__classPrivateFieldGet(this, _Engine_stats, \"f\").dom);\r\n        requestAnimationFrame(this.update);\r\n    }\r\n    update(now) {\r\n        const delta = now - __classPrivateFieldGet(this, _Engine_lastFrameTime, \"f\");\r\n        __classPrivateFieldGet(this, _Engine_stats, \"f\").begin();\r\n        if (this.running) {\r\n            // step physics\r\n            this.physics.update(delta);\r\n            // run per-frame game tasks\r\n            for (const script of __classPrivateFieldGet(this, _Engine_gameScripts, \"f\"))\r\n                script.update(delta);\r\n            // render scene\r\n            this.graphics.update();\r\n        }\r\n        __classPrivateFieldGet(this, _Engine_stats, \"f\").end();\r\n        __classPrivateFieldSet(this, _Engine_lastFrameTime, now, \"f\");\r\n        requestAnimationFrame(this.update);\r\n    }\r\n}\r\n_Engine_lastFrameTime = new WeakMap(), _Engine_gameScripts = new WeakMap(), _Engine_stats = new WeakMap(), _Engine_gui = new WeakMap(), _Engine_graphics = new WeakMap(), _Engine_physics = new WeakMap(), _Engine_assetLoader = new WeakMap(), _Engine_ecs = new WeakMap();\r\n\n\n//# sourceURL=webpack://the-grove/./src/js/engine.ts?");

/***/ }),

/***/ "./src/js/graphics/graphics.ts":
/*!*************************************!*\
  !*** ./src/js/graphics/graphics.ts ***!
  \*************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"CameraData\": () => (/* binding */ CameraData),\n/* harmony export */   \"GraphicsData\": () => (/* binding */ GraphicsData),\n/* harmony export */   \"CAMERA_TAG\": () => (/* binding */ CAMERA_TAG),\n/* harmony export */   \"Graphics\": () => (/* binding */ Graphics)\n/* harmony export */ });\n/* harmony import */ var three__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! three */ \"./node_modules/three/build/three.module.js\");\n/* harmony import */ var _ecs_entity__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../ecs/entity */ \"./src/js/ecs/entity.ts\");\n/* harmony import */ var _utils__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./utils */ \"./src/js/graphics/utils.ts\");\n/**\r\n * ===========================\r\n * Adding and Removing Objects\r\n * ===========================\r\n *\r\n * The situation is a little complicated, but it effectively works like this:\r\n *\r\n * Every time we create an object, we associate it with a unique ID that we can use to set/retrieve\r\n * its transform info from the shared array buffer.  When we delete an object, we recycle its ID, so\r\n * that future entities can reuse that slot in the shared buffer.  We do this by adding the removed\r\n * entity's ID to a list, `availableEntityIds`.  Whenever a new entity is added to the scene, we\r\n * first check that list to see if we can recycle any old, unused entity IDs.  If we cannot do that,\r\n * we increment a global counter and use that as the entity's ID - effectively, putting it at the\r\n * end of the shared array buffer.\r\n */\r\nvar __classPrivateFieldSet = (undefined && undefined.__classPrivateFieldSet) || function (receiver, state, value, kind, f) {\r\n    if (kind === \"m\") throw new TypeError(\"Private method is not writable\");\r\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a setter\");\r\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot write private member to an object whose class did not declare it\");\r\n    return (kind === \"a\" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value)), value;\r\n};\r\nvar __classPrivateFieldGet = (undefined && undefined.__classPrivateFieldGet) || function (receiver, state, kind, f) {\r\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a getter\");\r\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot read private member from an object whose class did not declare it\");\r\n    return kind === \"m\" ? f : kind === \"a\" ? f.call(receiver) : f ? f.value : state.get(receiver);\r\n};\r\nvar _Graphics_scene, _Graphics_idToObject, _Graphics_availableObjectIds, _Graphics_objectId, _Graphics_textureCache, _Graphics_commandQueue, _Graphics_worker, _Graphics_buffer, _Graphics_array, _Graphics_camera, _Graphics_bytesPerElement, _Graphics_elementsPerTransform, _Graphics_maxEntityCount;\r\n\r\n\r\n\r\n// eslint-disable-next-line no-redeclare\r\nconst CameraData = three__WEBPACK_IMPORTED_MODULE_0__.PerspectiveCamera;\r\n// eslint-disable-next-line no-redeclare\r\nconst GraphicsData = three__WEBPACK_IMPORTED_MODULE_0__.Object3D;\r\n/**\r\n * Entity tag used to retrieve the main camera\r\n * @example Entity.getTag(CAMERA_TAG)\r\n */\r\nconst CAMERA_TAG = Symbol('camera');\r\nclass Graphics {\r\n    constructor() {\r\n        /** Tree-like graph of renderable game objects */\r\n        _Graphics_scene.set(this, new three__WEBPACK_IMPORTED_MODULE_0__.Scene());\r\n        /**\r\n         * Map between mesh IDs and mesh instances\r\n         *\r\n         * @note mesh ID's are not the same as entity ID's, as we need a compact list of meshes,\r\n         * but not all entities will have mesh components.\r\n         */\r\n        _Graphics_idToObject.set(this, new Map());\r\n        /**\r\n         * Every time a mesh gets removed from the scene, we recycle its ID so that the list of meshes\r\n         * stays compact.  Recycled, unused IDs go into this list.\r\n         */\r\n        _Graphics_availableObjectIds.set(this, []);\r\n        /**\r\n         * Next available mesh ID\r\n         * @note when assigning ID's, recycle any ID's from `#availableObjectIds` first\r\n         */\r\n        _Graphics_objectId.set(this, 0);\r\n        /** Set of all texture UUID's that have already been uploaded to the backend */\r\n        _Graphics_textureCache.set(this, new Set());\r\n        /** Queue of commands to be submitted to the backend */\r\n        _Graphics_commandQueue.set(this, []);\r\n        /** Worker thread handle on which the graphics backend is ran */\r\n        _Graphics_worker.set(this, new Worker(new URL(/* worker import */ __webpack_require__.p + __webpack_require__.u(\"src_js_graphics_worker_ts\"), __webpack_require__.b)));\r\n        /** Cross-thread buffer of mesh transforms */\r\n        _Graphics_buffer.set(this, void 0);\r\n        /** f32 array view over #buffer, used for raw access */\r\n        _Graphics_array.set(this, void 0);\r\n        /**\r\n         * this camera acts as a proxy for the actual rendering camera in the backend\r\n         * @note camera has id #0\r\n         */\r\n        _Graphics_camera.set(this, new three__WEBPACK_IMPORTED_MODULE_0__.PerspectiveCamera());\r\n        /** Number of bytes per each element in the shared array buffer */\r\n        _Graphics_bytesPerElement.set(this, Float32Array.BYTES_PER_ELEMENT);\r\n        /** Number of elements per each matrix in the transform buffer (4x4 matrix = 16) */\r\n        _Graphics_elementsPerTransform.set(this, 16);\r\n        /** Maximum number of meshes whcih may exist concurrently */\r\n        _Graphics_maxEntityCount.set(this, 1024);\r\n        this.removeFromScene = (object) => {\r\n            const id = object.userData.meshId;\r\n            // inform the graphics backend\r\n            __classPrivateFieldGet(this, _Graphics_commandQueue, \"f\").push({\r\n                type: 'removeObject',\r\n                id,\r\n            });\r\n            // recycle ID\r\n            __classPrivateFieldGet(this, _Graphics_idToObject, \"f\").delete(id);\r\n            __classPrivateFieldGet(this, _Graphics_availableObjectIds, \"f\").push(id);\r\n        };\r\n        __classPrivateFieldSet(this, _Graphics_buffer, new SharedArrayBuffer(this.bufferSize), \"f\");\r\n        __classPrivateFieldSet(this, _Graphics_array, new Float32Array(__classPrivateFieldGet(this, _Graphics_buffer, \"f\")), \"f\");\r\n    }\r\n    /** Calculates the size of the transform buffer */\r\n    get bufferSize() {\r\n        return __classPrivateFieldGet(this, _Graphics_bytesPerElement, \"f\") * __classPrivateFieldGet(this, _Graphics_elementsPerTransform, \"f\") * __classPrivateFieldGet(this, _Graphics_maxEntityCount, \"f\");\r\n    }\r\n    init(engine) {\r\n        const offscreenCanvas = document.getElementById('main-canvas');\r\n        // @ts-ignore - TypeScript complains about limited offscreen canvas API support\r\n        const offscreen = offscreenCanvas.transferControlToOffscreen();\r\n        // create the camera as a game entity\r\n        new _ecs_entity__WEBPACK_IMPORTED_MODULE_1__.default(engine.ecs)\r\n            .addTag(CAMERA_TAG)\r\n            .setComponent(CameraData, __classPrivateFieldGet(this, _Graphics_camera, \"f\"));\r\n        this.assignIdToObject(__classPrivateFieldGet(this, _Graphics_camera, \"f\"));\r\n        // TODO too implicit: { entity.setComponent() => [event blackbox] => addObjectToScene() }\r\n        // TODO prefer: { mesh = graphics.makeObject(); entity.setComponent(mesh); }\r\n        // listen to component events\r\n        engine.ecs.events.on(`set${GraphicsData.name}Component`, (id, object) => {\r\n            object.traverse((child) => {\r\n                if (child instanceof three__WEBPACK_IMPORTED_MODULE_0__.Mesh || child instanceof three__WEBPACK_IMPORTED_MODULE_0__.Sprite || child instanceof three__WEBPACK_IMPORTED_MODULE_0__.Light) {\r\n                    this.addObjectToScene(object);\r\n                }\r\n            });\r\n        });\r\n        engine.ecs.events.on(`delete${GraphicsData.name}Component`, (id, mesh) => {\r\n            this.removeFromScene(mesh);\r\n        });\r\n        // initialize graphics backend\r\n        // @ts-ignore - I guess TypeScript is really just a bitch about offscreen API's.\r\n        __classPrivateFieldGet(this, _Graphics_worker, \"f\").postMessage({\r\n            type: 'init',\r\n            buffer: __classPrivateFieldGet(this, _Graphics_buffer, \"f\"),\r\n            canvas: offscreen,\r\n            width: window.innerWidth,\r\n            height: window.innerHeight,\r\n            pixelRatio: window.devicePixelRatio,\r\n        }, [offscreen]);\r\n        __classPrivateFieldGet(this, _Graphics_worker, \"f\").postMessage({\r\n            type: 'resize',\r\n            width: window.innerWidth,\r\n            height: window.innerHeight,\r\n            pixelRatio: window.devicePixelRatio,\r\n        });\r\n        // attach graphics backend to resize event hook\r\n        window.addEventListener('resize', () => {\r\n            __classPrivateFieldGet(this, _Graphics_commandQueue, \"f\").push({\r\n                type: 'resize',\r\n                width: window.innerWidth,\r\n                height: window.innerHeight,\r\n                pixelRatio: window.devicePixelRatio,\r\n            });\r\n        });\r\n    }\r\n    update() {\r\n        this.flushCommands();\r\n        this.writeTransformsToArray();\r\n    }\r\n    /**\r\n   * Upload queued graphics commands to backend & clear queue\r\n   */\r\n    flushCommands() {\r\n        for (const cmd of __classPrivateFieldGet(this, _Graphics_commandQueue, \"f\"))\r\n            __classPrivateFieldGet(this, _Graphics_worker, \"f\").postMessage(cmd);\r\n        __classPrivateFieldSet(this, _Graphics_commandQueue, [], \"f\");\r\n    }\r\n    /**\r\n   * Changes to material properties made by game code are not automatically mirrored by the backend.\r\n   * Thus, materials need to be manually flushed after updates\r\n   */\r\n    updateMaterial(object) {\r\n        this.extractMaterialTextures(object.material);\r\n        __classPrivateFieldGet(this, _Graphics_commandQueue, \"f\").push({\r\n            type: 'updateMaterial',\r\n            material: object.material.toJSON(),\r\n            id: object.userData.meshId,\r\n        });\r\n    }\r\n    raycast() {\r\n        const raycaster = new three__WEBPACK_IMPORTED_MODULE_0__.Raycaster();\r\n        raycaster.setFromCamera(new three__WEBPACK_IMPORTED_MODULE_0__.Vector2(), __classPrivateFieldGet(this, _Graphics_camera, \"f\"));\r\n        return raycaster.intersectObjects(Array.from(__classPrivateFieldGet(this, _Graphics_idToObject, \"f\").values()));\r\n    }\r\n    /**\r\n     * Flush all renderable objects' transforms to the shared transform buffer\r\n     */\r\n    writeTransformsToArray() {\r\n        // for every renderable...\r\n        for (const [id, object] of __classPrivateFieldGet(this, _Graphics_idToObject, \"f\")) {\r\n            // calculate offset into array given mesh ID\r\n            const offset = id * __classPrivateFieldGet(this, _Graphics_elementsPerTransform, \"f\");\r\n            // copy world matrix into transform buffer\r\n            object.updateMatrixWorld();\r\n            for (let i = 0; i < __classPrivateFieldGet(this, _Graphics_elementsPerTransform, \"f\"); i++) {\r\n                __classPrivateFieldGet(this, _Graphics_array, \"f\")[offset + i] = object.matrixWorld.elements[i];\r\n            }\r\n        }\r\n    }\r\n    /**\r\n     * Smart algorithm for assigning ID's to renderable objects by reusing ID's from old, removed\r\n     * objects first, and generating a new ID only if no recyclable ID's exist.\r\n     */\r\n    assignIdToObject(object) {\r\n        let id = __classPrivateFieldGet(this, _Graphics_objectId, \"f\");\r\n        // pick a recycled ID if one is available\r\n        if (__classPrivateFieldGet(this, _Graphics_availableObjectIds, \"f\").length > 0) {\r\n            id = __classPrivateFieldGet(this, _Graphics_availableObjectIds, \"f\").shift();\r\n        }\r\n        else {\r\n            __classPrivateFieldSet(this, _Graphics_objectId, __classPrivateFieldGet(this, _Graphics_objectId, \"f\") + 1, \"f\");\r\n            if (__classPrivateFieldGet(this, _Graphics_objectId, \"f\") > __classPrivateFieldGet(this, _Graphics_maxEntityCount, \"f\"))\r\n                throw new Error(`[graphics] exceeded maximum object count: ${__classPrivateFieldGet(this, _Graphics_maxEntityCount, \"f\")}`);\r\n        }\r\n        // set mesh/ID relationships\r\n        __classPrivateFieldGet(this, _Graphics_idToObject, \"f\").set(id, object);\r\n        object.userData.meshId = id;\r\n        return id;\r\n    }\r\n    /**\r\n     * Ship a texture to the graphics backend, but only if the texture has not already been uploaded.\r\n     */\r\n    uploadTexture(map) {\r\n        if (__classPrivateFieldGet(this, _Graphics_textureCache, \"f\").has(map.uuid))\r\n            return; // image is already cached\r\n        const { image, uuid } = map;\r\n        const { width, height } = image;\r\n        // grab raw image data from the texture\r\n        const { ctx } = _utils__WEBPACK_IMPORTED_MODULE_2__.default.scratchCanvasContext(width, height);\r\n        ctx.drawImage(image, 0, 0);\r\n        const imageData = ctx.getImageData(0, 0, width, height);\r\n        __classPrivateFieldGet(this, _Graphics_textureCache, \"f\").add(uuid);\r\n        __classPrivateFieldGet(this, _Graphics_commandQueue, \"f\").push({\r\n            type: 'uploadTexture',\r\n            imageId: uuid,\r\n            imageData: imageData.data,\r\n            imageWidth: width,\r\n            imageHeight: height,\r\n        });\r\n    }\r\n    extractMaterialTextures(material) {\r\n        // @ts-ignore\r\n        const { map, alphaMap } = material;\r\n        if (map)\r\n            this.uploadTexture(map);\r\n        if (alphaMap)\r\n            this.uploadTexture(alphaMap);\r\n    }\r\n    /**\r\n     * Upload a renderable object to the graphics backend.\r\n     * Establishing a scene hierarchy is possible by specifying `object.parent`\r\n     *\r\n     * Current supported objects: `Mesh`, `Sprite`, `Light`\r\n     */\r\n    addObjectToScene(object) {\r\n        if (object.parent)\r\n            object.parent.add(object);\r\n        else\r\n            __classPrivateFieldGet(this, _Graphics_scene, \"f\").add(object);\r\n        const id = this.assignIdToObject(object);\r\n        // send object's texture data to backend\r\n        if (object instanceof three__WEBPACK_IMPORTED_MODULE_0__.Mesh || object instanceof three__WEBPACK_IMPORTED_MODULE_0__.Sprite) {\r\n            if (object.material instanceof three__WEBPACK_IMPORTED_MODULE_0__.Material) {\r\n                this.extractMaterialTextures(object.material);\r\n            }\r\n            else {\r\n                for (const material of object.material) {\r\n                    this.extractMaterialTextures(material);\r\n                }\r\n            }\r\n        }\r\n        // send that bitch to the backend\r\n        __classPrivateFieldGet(this, _Graphics_commandQueue, \"f\").push({\r\n            type: 'addObject',\r\n            name: object.name,\r\n            mesh: object.toJSON(),\r\n            id,\r\n        });\r\n    }\r\n}\r\n_Graphics_scene = new WeakMap(), _Graphics_idToObject = new WeakMap(), _Graphics_availableObjectIds = new WeakMap(), _Graphics_objectId = new WeakMap(), _Graphics_textureCache = new WeakMap(), _Graphics_commandQueue = new WeakMap(), _Graphics_worker = new WeakMap(), _Graphics_buffer = new WeakMap(), _Graphics_array = new WeakMap(), _Graphics_camera = new WeakMap(), _Graphics_bytesPerElement = new WeakMap(), _Graphics_elementsPerTransform = new WeakMap(), _Graphics_maxEntityCount = new WeakMap();\r\n\n\n//# sourceURL=webpack://the-grove/./src/js/graphics/graphics.ts?");

/***/ }),

/***/ "./src/js/graphics/utils.ts":
/*!**********************************!*\
  !*** ./src/js/graphics/utils.ts ***!
  \**********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ GraphicsUtils)\n/* harmony export */ });\n/* harmony import */ var three__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! three */ \"./node_modules/three/build/three.module.js\");\n/* harmony import */ var _ecs_entity__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../ecs/entity */ \"./src/js/ecs/entity.ts\");\n\r\n\r\nclass GraphicsUtils {\r\n    static getEntityFromRenderable(object) {\r\n        return new _ecs_entity__WEBPACK_IMPORTED_MODULE_0__.default(_ecs_entity__WEBPACK_IMPORTED_MODULE_0__.default.defaultManager, object.userData.meshId);\r\n    }\r\n    static makeBall(radius, norotate) {\r\n        const geometry = new three__WEBPACK_IMPORTED_MODULE_1__.SphereBufferGeometry(radius, 32, 32);\r\n        const material = new three__WEBPACK_IMPORTED_MODULE_1__.MeshPhongMaterial({ color: 0x00CCFF });\r\n        const mesh = new three__WEBPACK_IMPORTED_MODULE_1__.Mesh(geometry, material);\r\n        mesh.userData.norotate = norotate;\r\n        return mesh;\r\n    }\r\n    static makeCylinder(radius, height) {\r\n        const geometry = new three__WEBPACK_IMPORTED_MODULE_1__.CylinderBufferGeometry(radius, radius, height);\r\n        const material = new three__WEBPACK_IMPORTED_MODULE_1__.MeshPhongMaterial({ color: 0x00CCFF });\r\n        const mesh = new three__WEBPACK_IMPORTED_MODULE_1__.Mesh(geometry, material);\r\n        return mesh;\r\n    }\r\n    /**\r\n   * Creates a temporary canvas element and returns its context.\r\n   * @note may leak memory if `canvas` is never deleted (unsure though).\r\n  */\r\n    static scratchCanvasContext(width, height) {\r\n        const canvas = document.createElement('canvas');\r\n        canvas.width = width;\r\n        canvas.height = height;\r\n        return { canvas, ctx: canvas.getContext('2d') };\r\n    }\r\n}\r\n\n\n//# sourceURL=webpack://the-grove/./src/js/graphics/utils.ts?");

/***/ }),

/***/ "./src/js/load.ts":
/*!************************!*\
  !*** ./src/js/load.ts ***!
  \************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ AssetLoader)\n/* harmony export */ });\n/* harmony import */ var three__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! three */ \"./node_modules/three/build/three.module.js\");\n/* harmony import */ var three_examples_jsm_loaders_GLTFLoader__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! three/examples/jsm/loaders/GLTFLoader */ \"./node_modules/three/examples/jsm/loaders/GLTFLoader.js\");\n/* harmony import */ var cannon_es__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! cannon-es */ \"./node_modules/cannon-es/dist/cannon-es.js\");\nvar __classPrivateFieldGet = (undefined && undefined.__classPrivateFieldGet) || function (receiver, state, kind, f) {\r\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a getter\");\r\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot read private member from an object whose class did not declare it\");\r\n    return kind === \"m\" ? f : kind === \"a\" ? f.call(receiver) : f ? f.value : state.get(receiver);\r\n};\r\nvar _AssetLoader_models, _AssetLoader_accessCount, _AssetLoader_callbacks;\r\n\r\n\r\n\r\nclass AssetLoader {\r\n    constructor() {\r\n        /** Map between model name and model data */\r\n        _AssetLoader_models.set(this, {});\r\n        /** Map between model name and number of cumulative requests for model */\r\n        _AssetLoader_accessCount.set(this, {});\r\n        /** List of functions to be executed once a model has loaded */\r\n        _AssetLoader_callbacks.set(this, {});\r\n    }\r\n    /** Promise-based `loadModel`.  NOTE: only works when model contains one mesh! */\r\n    async loadAsync(uri) {\r\n        return new Promise((resolve) => this.loadModel(uri, resolve));\r\n    }\r\n    /** Creates one or more renderable meshes from a model file */\r\n    loadModel(uri, callback) {\r\n        // increase access count for this model\r\n        __classPrivateFieldGet(this, _AssetLoader_accessCount, \"f\")[uri] = __classPrivateFieldGet(this, _AssetLoader_accessCount, \"f\")[uri] ?? 0;\r\n        __classPrivateFieldGet(this, _AssetLoader_accessCount, \"f\")[uri] += 1;\r\n        // register a new callback for when this model finishes loading\r\n        __classPrivateFieldGet(this, _AssetLoader_callbacks, \"f\")[uri] = __classPrivateFieldGet(this, _AssetLoader_callbacks, \"f\")[uri] ?? [];\r\n        __classPrivateFieldGet(this, _AssetLoader_callbacks, \"f\")[uri].push(callback);\r\n        // if this is the first time this resource was requested, load it\r\n        if (__classPrivateFieldGet(this, _AssetLoader_accessCount, \"f\")[uri] === 1) {\r\n            const loader = new three_examples_jsm_loaders_GLTFLoader__WEBPACK_IMPORTED_MODULE_0__.GLTFLoader();\r\n            loader.load(uri, ({ scene: object }) => {\r\n                __classPrivateFieldGet(this, _AssetLoader_models, \"f\")[uri] = object;\r\n                __classPrivateFieldGet(this, _AssetLoader_models, \"f\")[uri].updateMatrixWorld();\r\n                // for each child in object\r\n                //   upload child\r\n                //   for each texture in child\r\n                //      upload texture\r\n                // model may have been requested again since it started loading,\r\n                // serve asset to all cached requests\r\n                __classPrivateFieldGet(this, _AssetLoader_models, \"f\")[uri].traverse((child) => {\r\n                    if (child instanceof three__WEBPACK_IMPORTED_MODULE_1__.Mesh) {\r\n                        for (const cb of __classPrivateFieldGet(this, _AssetLoader_callbacks, \"f\")[uri]) {\r\n                            child.updateMatrixWorld();\r\n                            const inst = child.clone();\r\n                            cb(inst);\r\n                        }\r\n                    }\r\n                });\r\n            });\r\n        }\r\n        // load from the model cache if possible\r\n        if (__classPrivateFieldGet(this, _AssetLoader_models, \"f\")[uri]) {\r\n            __classPrivateFieldGet(this, _AssetLoader_models, \"f\")[uri].traverse((child) => {\r\n                if (child instanceof three__WEBPACK_IMPORTED_MODULE_1__.Mesh) {\r\n                    child.updateMatrixWorld();\r\n                    const inst = child.clone();\r\n                    callback(inst);\r\n                }\r\n            });\r\n        }\r\n    }\r\n    /** Creates a physics body from a renderable mesh's geometry */\r\n    static loadPhysicsModel({ geometry, position, quaternion }, mass) {\r\n        // extract vertex positions\r\n        const verts = geometry.getAttribute('position').array;\r\n        // extract triangle indices\r\n        const faces = geometry.index?.array;\r\n        // create new physics body\r\n        const shape = new cannon_es__WEBPACK_IMPORTED_MODULE_2__.Trimesh(verts, faces);\r\n        const material = new cannon_es__WEBPACK_IMPORTED_MODULE_2__.Material('trimeshMaterial');\r\n        const body = new cannon_es__WEBPACK_IMPORTED_MODULE_2__.Body({\r\n            mass,\r\n            material,\r\n        });\r\n        body.addShape(shape);\r\n        // copy transform from mesh -> physics body\r\n        const { x: px, y: py, z: pz } = position;\r\n        const { x: qx, y: qy, z: qz, w: qw, } = quaternion;\r\n        body.position.copy(new cannon_es__WEBPACK_IMPORTED_MODULE_2__.Vec3(px, py, pz));\r\n        body.quaternion.copy(new cannon_es__WEBPACK_IMPORTED_MODULE_2__.Quaternion(qx, qy, qz, qw));\r\n        return body;\r\n    }\r\n}\r\n_AssetLoader_models = new WeakMap(), _AssetLoader_accessCount = new WeakMap(), _AssetLoader_callbacks = new WeakMap();\r\n\n\n//# sourceURL=webpack://the-grove/./src/js/load.ts?");

/***/ }),

/***/ "./src/js/main.ts":
/*!************************!*\
  !*** ./src/js/main.ts ***!
  \************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var bootstrap_dist_css_bootstrap__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! bootstrap/dist/css/bootstrap */ \"./node_modules/bootstrap/dist/css/bootstrap.css\");\n/* harmony import */ var _css_play__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../css/play */ \"./src/css/play.css\");\n/* harmony import */ var _engine__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./engine */ \"./src/js/engine.ts\");\n\r\n\r\n\r\n/**\r\n * Note to future Seth:  I'm really pissed that I didn't blog about this coding journey.\r\n * The Grove has been single-handedly my deepest dive into coding a large project from scratch,\r\n * it has taught me so much, and I think there was a lot of invaluable wisdom gained from working\r\n * on this.\r\n *\r\n * I recall from memory *so* many thought processes and development decisions that could've been\r\n * written about, and it's a shame that I didn't do so.  My best wish now is to continue work on\r\n * The Grove, and document _everything_ on my way.\r\n *\r\n * Buddha shine upon these TypeScript files.\r\n */\r\nconst engine = new _engine__WEBPACK_IMPORTED_MODULE_2__.default();\r\nengine.init();\r\n\n\n//# sourceURL=webpack://the-grove/./src/js/main.ts?");

/***/ }),

/***/ "./src/js/physics.ts":
/*!***************************!*\
  !*** ./src/js/physics.ts ***!
  \***************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"PhysicsData\": () => (/* binding */ PhysicsData),\n/* harmony export */   \"ConstraintData\": () => (/* binding */ ConstraintData),\n/* harmony export */   \"Physics\": () => (/* binding */ Physics)\n/* harmony export */ });\n/* harmony import */ var cannon_es__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! cannon-es */ \"./node_modules/cannon-es/dist/cannon-es.js\");\n/* harmony import */ var _ecs_entity__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./ecs/entity */ \"./src/js/ecs/entity.ts\");\nvar __classPrivateFieldGet = (undefined && undefined.__classPrivateFieldGet) || function (receiver, state, kind, f) {\r\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a getter\");\r\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot read private member from an object whose class did not declare it\");\r\n    return kind === \"m\" ? f : kind === \"a\" ? f.call(receiver) : f ? f.value : state.get(receiver);\r\n};\r\nvar _Physics_world, _Physics_bodyToEntity;\r\n/* eslint-disable max-classes-per-file */\r\n\r\n\r\nconst PhysicsData = cannon_es__WEBPACK_IMPORTED_MODULE_0__.Body;\r\nconst ConstraintData = cannon_es__WEBPACK_IMPORTED_MODULE_0__.PointToPointConstraint;\r\nclass Physics {\r\n    constructor() {\r\n        // world container which holds all physical bodies\r\n        _Physics_world.set(this, new cannon_es__WEBPACK_IMPORTED_MODULE_0__.World());\r\n        _Physics_bodyToEntity.set(this, new Map());\r\n    }\r\n    init(engine) {\r\n        // general world options\r\n        __classPrivateFieldGet(this, _Physics_world, \"f\").gravity.set(0, -9.8, 0);\r\n        __classPrivateFieldGet(this, _Physics_world, \"f\").allowSleep = true;\r\n        // default contact options (disabled friction for character controllers)\r\n        __classPrivateFieldGet(this, _Physics_world, \"f\").defaultContactMaterial.contactEquationStiffness = 1e9;\r\n        __classPrivateFieldGet(this, _Physics_world, \"f\").defaultContactMaterial.contactEquationRelaxation = 4;\r\n        __classPrivateFieldGet(this, _Physics_world, \"f\").defaultContactMaterial.friction = 0.0;\r\n        // provide broadphase\r\n        __classPrivateFieldGet(this, _Physics_world, \"f\").broadphase = new cannon_es__WEBPACK_IMPORTED_MODULE_0__.SAPBroadphase(__classPrivateFieldGet(this, _Physics_world, \"f\"));\r\n        __classPrivateFieldGet(this, _Physics_world, \"f\").broadphase.useBoundingBoxes = true;\r\n        // collision solver\r\n        const split = true;\r\n        const solver = new cannon_es__WEBPACK_IMPORTED_MODULE_0__.GSSolver();\r\n        solver.iterations = 7;\r\n        solver.tolerance = 0.1;\r\n        __classPrivateFieldGet(this, _Physics_world, \"f\").solver = split ? new cannon_es__WEBPACK_IMPORTED_MODULE_0__.SplitSolver(solver) : solver;\r\n        // listen for entity events\r\n        engine.ecs.events.on(`set${PhysicsData.name}Component`, (id, data) => {\r\n            __classPrivateFieldGet(this, _Physics_world, \"f\").addBody(data);\r\n            __classPrivateFieldGet(this, _Physics_bodyToEntity, \"f\").set(data, new _ecs_entity__WEBPACK_IMPORTED_MODULE_1__.default(_ecs_entity__WEBPACK_IMPORTED_MODULE_1__.default.defaultManager, id));\r\n        });\r\n        engine.ecs.events.on(`set${ConstraintData.name}Component`, (id, data) => {\r\n            __classPrivateFieldGet(this, _Physics_world, \"f\").addConstraint(data);\r\n        });\r\n        engine.ecs.events.on(`delete${PhysicsData.name}Component`, (id, data) => {\r\n            __classPrivateFieldGet(this, _Physics_world, \"f\").removeBody(data);\r\n            __classPrivateFieldGet(this, _Physics_bodyToEntity, \"f\").delete(data);\r\n        });\r\n        engine.ecs.events.on(`delete${ConstraintData.name}Component`, (id, data) => {\r\n            __classPrivateFieldGet(this, _Physics_world, \"f\").removeConstraint(data);\r\n        });\r\n    }\r\n    update(delta) {\r\n        __classPrivateFieldGet(this, _Physics_world, \"f\").step(1 / 60, Math.min(delta, 1 / 30), 10);\r\n    }\r\n    getEntityFromBody(body) {\r\n        return __classPrivateFieldGet(this, _Physics_bodyToEntity, \"f\").get(body);\r\n    }\r\n    // returns true if a body exists on the provided line\r\n    // only detects bodies in collisionFilterGroup 1\r\n    raycast(from, to) {\r\n        const ray = new cannon_es__WEBPACK_IMPORTED_MODULE_0__.Ray(from, to);\r\n        const result = new cannon_es__WEBPACK_IMPORTED_MODULE_0__.RaycastResult();\r\n        ray.intersectWorld(__classPrivateFieldGet(this, _Physics_world, \"f\"), { result, collisionFilterMask: 1 });\r\n        return result.hasHit;\r\n    }\r\n    /**\r\n     * Utility methods for making RigidBodies\r\n     */\r\n    static makeBall(mass, radius) {\r\n        const shape = new cannon_es__WEBPACK_IMPORTED_MODULE_0__.Sphere(radius);\r\n        const body = new cannon_es__WEBPACK_IMPORTED_MODULE_0__.Body({ mass });\r\n        body.addShape(shape);\r\n        return body;\r\n    }\r\n    static makeCylinder(mass, radius, height) {\r\n        const shape = new cannon_es__WEBPACK_IMPORTED_MODULE_0__.Cylinder(radius, radius, height);\r\n        const body = new cannon_es__WEBPACK_IMPORTED_MODULE_0__.Body({ mass });\r\n        body.addShape(shape);\r\n        return body;\r\n    }\r\n    static makeCapsule(mass, radius, height) {\r\n        const shape = new cannon_es__WEBPACK_IMPORTED_MODULE_0__.Sphere(radius);\r\n        const body = new cannon_es__WEBPACK_IMPORTED_MODULE_0__.Body({ mass });\r\n        body.addShape(shape, new cannon_es__WEBPACK_IMPORTED_MODULE_0__.Vec3(0, 0, 0));\r\n        body.addShape(shape, new cannon_es__WEBPACK_IMPORTED_MODULE_0__.Vec3(0, height / 2 - radius, 0));\r\n        body.addShape(shape, new cannon_es__WEBPACK_IMPORTED_MODULE_0__.Vec3(0, -height / 2 + radius, 0));\r\n        return body;\r\n    }\r\n}\r\n_Physics_world = new WeakMap(), _Physics_bodyToEntity = new WeakMap();\r\n\n\n//# sourceURL=webpack://the-grove/./src/js/physics.ts?");

/***/ }),

/***/ "./src/js/game lazy recursive ^\\.\\/.*$":
/*!*****************************************************!*\
  !*** ./src/js/game/ lazy ^\.\/.*$ namespace object ***!
  \*****************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("var map = {\n\t\"./_scripts\": [\n\t\t\"./src/js/game/_scripts.json\",\n\t\t3\n\t],\n\t\"./_scripts.json\": [\n\t\t\"./src/js/game/_scripts.json\",\n\t\t3\n\t],\n\t\"./health\": [\n\t\t\"./src/js/game/health.ts\",\n\t\t9,\n\t\t\"src_js_game_health_ts\"\n\t],\n\t\"./health.ts\": [\n\t\t\"./src/js/game/health.ts\",\n\t\t9,\n\t\t\"src_js_game_health_ts\"\n\t],\n\t\"./hominid\": [\n\t\t\"./src/js/game/hominid.ts\",\n\t\t9,\n\t\t\"src_js_game_keyboardControls_ts\",\n\t\t\"src_js_game_hominid_ts\"\n\t],\n\t\"./hominid.ts\": [\n\t\t\"./src/js/game/hominid.ts\",\n\t\t9,\n\t\t\"src_js_game_keyboardControls_ts\",\n\t\t\"src_js_game_hominid_ts\"\n\t],\n\t\"./keyboardControls\": [\n\t\t\"./src/js/game/keyboardControls.ts\",\n\t\t9,\n\t\t\"src_js_game_keyboardControls_ts\"\n\t],\n\t\"./keyboardControls.ts\": [\n\t\t\"./src/js/game/keyboardControls.ts\",\n\t\t9,\n\t\t\"src_js_game_keyboardControls_ts\"\n\t],\n\t\"./meshTransform\": [\n\t\t\"./src/js/game/meshTransform.ts\",\n\t\t9,\n\t\t\"src_js_game_meshTransform_ts\"\n\t],\n\t\"./meshTransform.ts\": [\n\t\t\"./src/js/game/meshTransform.ts\",\n\t\t9,\n\t\t\"src_js_game_meshTransform_ts\"\n\t],\n\t\"./movement\": [\n\t\t\"./src/js/game/movement.ts\",\n\t\t9,\n\t\t\"src_js_game_movement_ts\"\n\t],\n\t\"./movement.ts\": [\n\t\t\"./src/js/game/movement.ts\",\n\t\t9,\n\t\t\"src_js_game_movement_ts\"\n\t],\n\t\"./pauseMenu\": [\n\t\t\"./src/js/game/pauseMenu.ts\",\n\t\t9,\n\t\t\"src_js_game_pauseMenu_ts\"\n\t],\n\t\"./pauseMenu.ts\": [\n\t\t\"./src/js/game/pauseMenu.ts\",\n\t\t9,\n\t\t\"src_js_game_pauseMenu_ts\"\n\t],\n\t\"./player\": [\n\t\t\"./src/js/game/player.ts\",\n\t\t9,\n\t\t\"src_js_game_keyboardControls_ts\",\n\t\t\"src_js_game_player_ts\"\n\t],\n\t\"./player.ts\": [\n\t\t\"./src/js/game/player.ts\",\n\t\t9,\n\t\t\"src_js_game_keyboardControls_ts\",\n\t\t\"src_js_game_player_ts\"\n\t],\n\t\"./rabbit\": [\n\t\t\"./src/js/game/rabbit.ts\",\n\t\t9,\n\t\t\"src_js_game_keyboardControls_ts\",\n\t\t\"src_js_game_rabbit_ts\"\n\t],\n\t\"./rabbit.ts\": [\n\t\t\"./src/js/game/rabbit.ts\",\n\t\t9,\n\t\t\"src_js_game_keyboardControls_ts\",\n\t\t\"src_js_game_rabbit_ts\"\n\t],\n\t\"./scene\": [\n\t\t\"./src/js/game/scene.ts\",\n\t\t9,\n\t\t\"src_js_game_scene_ts\"\n\t],\n\t\"./scene.ts\": [\n\t\t\"./src/js/game/scene.ts\",\n\t\t9,\n\t\t\"src_js_game_scene_ts\"\n\t],\n\t\"./score\": [\n\t\t\"./src/js/game/score.ts\",\n\t\t9,\n\t\t\"src_js_game_score_ts\"\n\t],\n\t\"./score.ts\": [\n\t\t\"./src/js/game/score.ts\",\n\t\t9,\n\t\t\"src_js_game_score_ts\"\n\t],\n\t\"./shooting\": [\n\t\t\"./src/js/game/shooting.ts\",\n\t\t9,\n\t\t\"src_js_game_keyboardControls_ts\",\n\t\t\"src_js_game_shooting_ts\"\n\t],\n\t\"./shooting.ts\": [\n\t\t\"./src/js/game/shooting.ts\",\n\t\t9,\n\t\t\"src_js_game_keyboardControls_ts\",\n\t\t\"src_js_game_shooting_ts\"\n\t],\n\t\"./spawner\": [\n\t\t\"./src/js/game/spawner.ts\",\n\t\t9,\n\t\t\"src_js_game_spawner_ts\"\n\t],\n\t\"./spawner.ts\": [\n\t\t\"./src/js/game/spawner.ts\",\n\t\t9,\n\t\t\"src_js_game_spawner_ts\"\n\t],\n\t\"./upgrade\": [\n\t\t\"./src/js/game/upgrade.ts\",\n\t\t9,\n\t\t\"src_js_game_keyboardControls_ts\",\n\t\t\"src_js_game_upgrade_ts\"\n\t],\n\t\"./upgrade.ts\": [\n\t\t\"./src/js/game/upgrade.ts\",\n\t\t9,\n\t\t\"src_js_game_keyboardControls_ts\",\n\t\t\"src_js_game_upgrade_ts\"\n\t]\n};\nfunction webpackAsyncContext(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\treturn Promise.resolve().then(() => {\n\t\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\t\te.code = 'MODULE_NOT_FOUND';\n\t\t\tthrow e;\n\t\t});\n\t}\n\n\tvar ids = map[req], id = ids[0];\n\treturn Promise.all(ids.slice(2).map(__webpack_require__.e)).then(() => {\n\t\treturn __webpack_require__.t(id, ids[1] | 16)\n\t});\n}\nwebpackAsyncContext.keys = () => (Object.keys(map));\nwebpackAsyncContext.id = \"./src/js/game lazy recursive ^\\\\.\\\\/.*$\";\nmodule.exports = webpackAsyncContext;\n\n//# sourceURL=webpack://the-grove/./src/js/game/_lazy_^\\.\\/.*$_namespace_object?");

/***/ }),

/***/ "./src/js/game/_scripts.json":
/*!***********************************!*\
  !*** ./src/js/game/_scripts.json ***!
  \***********************************/
/***/ ((module) => {

"use strict";
eval("module.exports = JSON.parse('{\"scripts\":[\"scene\",\"keyboardControls\",\"movement\",\"player\",\"hominid\",\"upgrade\",\"health\",\"shooting\",\"pauseMenu\",\"meshTransform\"]}');\n\n//# sourceURL=webpack://the-grove/./src/js/game/_scripts.json?");

/***/ }),

/***/ "./src/js/json/maps.json":
/*!*******************************!*\
  !*** ./src/js/json/maps.json ***!
  \*******************************/
/***/ ((module) => {

"use strict";
eval("module.exports = JSON.parse('{\"skjar-isles\":{\"objects\":[\"/models/skjar-isles-glb/skjarisles.glb\"]},\"test-arena\":{\"objects\":[\"/models/arena/arena.glb\"]}}');\n\n//# sourceURL=webpack://the-grove/./src/js/json/maps.json?");

/***/ })

},
/******/ __webpack_require__ => { // webpackRuntimeModules
/******/ var __webpack_exec__ = (moduleId) => (__webpack_require__(__webpack_require__.s = moduleId))
/******/ __webpack_require__.O(0, ["vendor"], () => (__webpack_exec__("./src/js/main.ts")));
/******/ var __webpack_exports__ = __webpack_require__.O();
/******/ }
]);