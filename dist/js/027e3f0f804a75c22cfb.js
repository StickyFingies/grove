/*!
 * 
 * Made with <3 by the Grove team | Mon Aug 09 2021 13:21:12 GMT-0500 (Central Daylight Time)
 *
 */
"use strict";
/*
 * ATTENTION: The "eval" devtool has been used (maybe by default in mode: "development").
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(self["webpackChunkthe_grove"] = self["webpackChunkthe_grove"] || []).push([["src_js_game_movement_ts"],{

/***/ "./src/js/ecs/view.ts":
/*!****************************!*\
  !*** ./src/js/ecs/view.ts ***!
  \****************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ EcsView)\n/* harmony export */ });\n/* harmony import */ var _entity__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./entity */ \"./src/js/ecs/entity.ts\");\nvar __classPrivateFieldSet = (undefined && undefined.__classPrivateFieldSet) || function (receiver, state, value, kind, f) {\r\n    if (kind === \"m\") throw new TypeError(\"Private method is not writable\");\r\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a setter\");\r\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot write private member to an object whose class did not declare it\");\r\n    return (kind === \"a\" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value)), value;\r\n};\r\nvar __classPrivateFieldGet = (undefined && undefined.__classPrivateFieldGet) || function (receiver, state, kind, f) {\r\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a getter\");\r\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot read private member from an object whose class did not declare it\");\r\n    return kind === \"m\" ? f : kind === \"a\" ? f.call(receiver) : f ? f.value : state.get(receiver);\r\n};\r\nvar _EcsView_ecs, _EcsView_signature;\r\n\r\n/**\r\n * Utility for calling `IEntityManager.submitQuery` which wraps the IDs in `Entity` objects\r\n */\r\nclass EcsView {\r\n    constructor(ecs, signature) {\r\n        /** Entity manager to iterate over */\r\n        _EcsView_ecs.set(this, void 0);\r\n        /** Signature to check entities for */\r\n        _EcsView_signature.set(this, void 0);\r\n        __classPrivateFieldSet(this, _EcsView_ecs, ecs, \"f\");\r\n        __classPrivateFieldSet(this, _EcsView_signature, signature, \"f\");\r\n    }\r\n    /** Execute a callback for every entity that matches signature */\r\n    iterateView(callback) {\r\n        const ids = __classPrivateFieldGet(this, _EcsView_ecs, \"f\").submitQuery(__classPrivateFieldGet(this, _EcsView_signature, \"f\"));\r\n        for (const id of ids)\r\n            callback(new _entity__WEBPACK_IMPORTED_MODULE_0__.default(__classPrivateFieldGet(this, _EcsView_ecs, \"f\"), id));\r\n    }\r\n}\r\n_EcsView_ecs = new WeakMap(), _EcsView_signature = new WeakMap();\r\n\n\n//# sourceURL=webpack://the-grove/./src/js/ecs/view.ts?");

/***/ }),

/***/ "./src/js/game/movement.ts":
/*!*********************************!*\
  !*** ./src/js/game/movement.ts ***!
  \*********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"MovementData\": () => (/* binding */ MovementData),\n/* harmony export */   \"default\": () => (/* binding */ MovementScript)\n/* harmony export */ });\n/* harmony import */ var cannon_es__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! cannon-es */ \"./node_modules/cannon-es/dist/cannon-es.js\");\n/* harmony import */ var three__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! three */ \"./node_modules/three/build/three.module.js\");\n/* harmony import */ var _ecs_entity__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../ecs/entity */ \"./src/js/ecs/entity.ts\");\n/* harmony import */ var _ecs_view__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../ecs/view */ \"./src/js/ecs/view.ts\");\n/* harmony import */ var _physics__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../physics */ \"./src/js/physics.ts\");\n/* harmony import */ var _script__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../script */ \"./src/js/script.ts\");\n\r\n\r\n\r\n\r\n\r\n\r\nclass MovementData {\r\n    constructor(walkVelocity, jumpVelocity) {\r\n        /** Direction the entity should walk */\r\n        this.direction = new three__WEBPACK_IMPORTED_MODULE_0__.Vector3();\r\n        /** Flag whether the entity wants to jump or not */\r\n        this.wantsToJump = false;\r\n        /** Flag whether the entity is sprinting */\r\n        this.sprinting = false;\r\n        /**\r\n         * Normal of surface the entity is standing on\r\n         * @internal\r\n         */\r\n        this.groundNormal = new three__WEBPACK_IMPORTED_MODULE_0__.Vector3();\r\n        this.walkVelocity = walkVelocity;\r\n        this.jumpVelocity = jumpVelocity;\r\n    }\r\n}\r\nclass MovementScript extends _script__WEBPACK_IMPORTED_MODULE_1__.default {\r\n    constructor() {\r\n        super(...arguments);\r\n        this.movementView = new _ecs_view__WEBPACK_IMPORTED_MODULE_2__.default(this.ecs, new Set([MovementData, _physics__WEBPACK_IMPORTED_MODULE_3__.PhysicsData]));\r\n    }\r\n    init() {\r\n        this.ecs.events.on(`set${MovementData.name}Component`, (id, mvmt) => {\r\n            const entity = new _ecs_entity__WEBPACK_IMPORTED_MODULE_4__.default(_ecs_entity__WEBPACK_IMPORTED_MODULE_4__.default.defaultManager, id);\r\n            const body = entity.getComponent(_physics__WEBPACK_IMPORTED_MODULE_3__.PhysicsData);\r\n            // entity movement depends on physics\r\n            if (!entity.hasComponent(_physics__WEBPACK_IMPORTED_MODULE_3__.PhysicsData))\r\n                throw new Error(`Component ${MovementData.name} must be set after ${_physics__WEBPACK_IMPORTED_MODULE_3__.PhysicsData.name}`);\r\n            // update ground info when entity collides with something\r\n            body.addEventListener('collide', ({ contact }) => {\r\n                const normal = new cannon_es__WEBPACK_IMPORTED_MODULE_5__.Vec3();\r\n                // ensure the contact normal is facing outwards from the object, not the player\r\n                if (contact.bi.id === body.id) {\r\n                    contact.ni.negate(normal);\r\n                }\r\n                else {\r\n                    normal.copy(contact.ni);\r\n                }\r\n                mvmt.groundNormal = new three__WEBPACK_IMPORTED_MODULE_0__.Vector3(normal.x, normal.y, normal.z);\r\n            });\r\n        });\r\n    }\r\n    update(dt) {\r\n        this.movementView.iterateView((entity) => {\r\n            const body = entity.getComponent(_physics__WEBPACK_IMPORTED_MODULE_3__.PhysicsData);\r\n            const mvmt = entity.getComponent(MovementData);\r\n            // walkVector = direction * speed\r\n            const walkVector = mvmt.direction.normalize();\r\n            walkVector.multiplyScalar(mvmt.walkVelocity);\r\n            walkVector.multiplyScalar(mvmt.sprinting ? 2 : 1);\r\n            // walk\r\n            body.velocity.x += walkVector.x;\r\n            body.velocity.z += walkVector.z;\r\n            const { max, min } = Math;\r\n            const clamp = (n, a, b) => max(min(n, max(a, b)), min(a, b));\r\n            // restrict speed\r\n            body.velocity.x = clamp(body.velocity.x, -walkVector.x, walkVector.x);\r\n            body.velocity.z = clamp(body.velocity.z, -walkVector.z, walkVector.z);\r\n            // try to jump\r\n            if (mvmt.wantsToJump) {\r\n                const raycastDst = new cannon_es__WEBPACK_IMPORTED_MODULE_5__.Vec3(body.position.x, body.position.y - 2, body.position.z);\r\n                const canJump = this.physics.raycast(body.position, raycastDst);\r\n                if (canJump)\r\n                    body.velocity.y += mvmt.jumpVelocity;\r\n            }\r\n        });\r\n    }\r\n}\r\n\n\n//# sourceURL=webpack://the-grove/./src/js/game/movement.ts?");

/***/ }),

/***/ "./src/js/script.ts":
/*!**************************!*\
  !*** ./src/js/script.ts ***!
  \**************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ GameScript)\n/* harmony export */ });\n/* harmony import */ var auto_bind__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! auto-bind */ \"./node_modules/auto-bind/index.js\");\n/* harmony import */ var auto_bind__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(auto_bind__WEBPACK_IMPORTED_MODULE_0__);\n\r\n/**\r\n * Helper class for making core engine systems available to derived classes\r\n *\r\n * If `queries` **IS** set, `update()` gets called once per each game entity which contains all\r\n * components specified in `queries`, and recieves that entity as a paramenter.\r\n *\r\n * If `queries` **IS NOT** set, `update()` is only called once, and is not passed any entities.\r\n *\r\n * @note `GameScript` employs Sindresorhus' `autoBind()` in the constructor, meaning there's no need\r\n * to call `this.method.bind(this)` when passing methods as callbacks.\r\n *\r\n * @example\r\n * this.graphics.doSomething(); // no need for accessing engine directly\r\n * this.assetLoader.loadModel('/assets/foo', this.loadCallback); // no need for .bind()\r\n */\r\nclass GameScript {\r\n    constructor(engine) {\r\n        this.engine = engine;\r\n        this.graphics = engine.graphics;\r\n        this.physics = engine.physics;\r\n        this.ecs = engine.ecs;\r\n        this.gui = engine.gui;\r\n        this.assetLoader = engine.assetLoader;\r\n        auto_bind__WEBPACK_IMPORTED_MODULE_0___default()(this);\r\n    }\r\n    /** @virtual */\r\n    // eslint-disable-next-line class-methods-use-this, no-empty-function\r\n    init() { }\r\n    /** @virtual */\r\n    // eslint-disable-next-line class-methods-use-this, no-empty-function\r\n    update(dt) { }\r\n}\r\n\n\n//# sourceURL=webpack://the-grove/./src/js/script.ts?");

/***/ })

}]);